#!/bin/sh
# Copyright (c) 2009-2017 Wolfram Schneider, https://bbbike.org
#
# bbbike-merge - git merge from bbbike.de / master branch

set -e
: ${verbose=true}
: ${debug=false}
: ${bbbike_fast_checkout=true}
: ${bbbike_test=true}
: ${BBBIKE_TMPDIR="/bbbike/tmp"}

dir=`dirname $0`
PATH=$PATH:$dir; export PATH 

command="$@"
export bbbike_fast_checkout

TMPDIR=$BBBIKE_TMPDIR; export TMPDIR

dir=$(mktemp -d -t bbbike-bootstrap.XXXXXXXX)
cd $dir

logfile=$(pwd)/log.bbbike
$debug || exec 2> $logfile

error () {
   message="$@"
   echo $message
   cat $logfile
   exit 2
}

if $bbbike_fast_checkout; then
   git_repo=bbbike
fi

bbbike-checkout >&2 || error "checkout failed: $dir"
cd bbbike

git_opt="--no-edit"
#$verbose || git_opt="-q"
if ! git merge $git_opt eserte/master > log.git-merge; then
    echo "merged failed: $dir/bbbike"
    exit 1
fi

make -s js perltidy || error "js perltidy"
make -s update-files  || error "update-files"

if egrep -q '^Already up-to-date.$' log.git-merge; then
    fetch_status=0
else
    fetch_status=1
fi

if [ $fetch_status -eq 0 ]; then
    echo "No updates..."
fi

if [ $bbbike_test -a $fetch_status -ne 0 ]; then
    echo ""
    echo "running tests, will run for 2 minutes"
    if make check >> $logfile 2>&1; then
        :
    else
    	error "test failed: $(pwd)"
    fi
fi

make git-diff

if [ $verbose -a $fetch_status -ne 0 ]; then
    pwd
    if [ -n "$command" ]; then
        $command
    fi
    echo "please run:"
    echo ""
    #echo "#( cd $dir/bbbike && make check-full )"
    echo "( cd $dir/bbbike && make git-push && rm -rf $dir )"
else
    rm -rf $dir
fi

