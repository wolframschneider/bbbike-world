#!/bin/sh
# Copyright (c) 2012-2024 Wolfram Schneider, https://bbbike.org
#
# osm2mapsforge - convert a osm/pbf file to mapsforge
#

PATH="/usr/local/bin:/bin:/usr/bin"; export PATH
: ${BBBIKE_EXTRACT_LANG="en"}
: ${MD5=$(which md5 md5sum false 2>/dev/null | head -1)}
: ${BBBIKE_TMPDIR="/opt/bbbike/tmp"}
: ${BBBIKE_TMPFS="/tmp"}
: ${logfile_max_size="3000k"}
: ${osm2xxx_max_jobs="3"}
: ${max_file_size_mapsforge_ram="900000"}

set -e

usage () {
   echo "$@"
   echo "usage file [ style ] [ title ]"
   echo ""
   echo "style: osm"
   exit 1
}

error () {
    message="$@"

    echo "$message"
    echo "Running $0 with input file: $file"
    echo ""
    tail -c 256K $logfile
    exit 1
}

file=$1
city=$3

test -z "$file" && usage "missing file"

map_style="osm"

# absolute file path
case $file in /*) ;; *) file=$(pwd)/$file ;; esac

text2html=$(dirname $0)/text2html.sh
case $text2html in /*) ;; *) text2html=$(pwd)/$text2html ;; esac

template=$(dirname $0)/../etc/extract/$(basename $0).$BBBIKE_EXTRACT_LANG.sh
case $template in /*) ;; *) template=$(pwd)/$template ;; esac

test -e "$file" || usage "file $file does not exists"
: ${osm_checksum=$(dirname $0)/osm-checksum}

test -z "$ext" && ext=${2-"osm"}
: ${debug=false}

hd_mode="type=ram"
size=$(du -ks -L "$file" | awk '{ print $1}')
: ${java_heap="5G"}

if [ $size -gt $max_file_size_mapsforge_ram ]; then
  # switch to disk mode if larger than 600MB,
  # maybe 8 times slower, 3 times more cpu time
  hd_mode="type=hd"
  java_heap="32G"
  BBBIKE_TMPFS=$BBBIKE_TMPDIR
elif [ $size -gt 310000 ]; then
  java_heap="32G"
elif [ $size -gt 200000 ]; then
  java_heap="24G"
elif [ $size -gt 100000 ]; then
  java_heap="16G"
elif [ $size -gt  50000 ]; then
  java_heap="8G"
fi

pwd=$(pwd)
JAVACMD_OPTIONS=-Xmx${java_heap}; export JAVACMD_OPTIONS

etc_dir=$(dirname $0)/../etc/mkgmap
# absolute path
case $etc_dir in /* ) ;; *) etc_dir=$pwd/$etc_dir ;; esac

case $ext in
   osm | mapsforge-osm.zip )
	ext=mapsforge-osm.zip
	;;

   *) usage ;;
esac

test -z "$file" && usage

# use RAM disk
tmpdir=$(mktemp -d ${BBBIKE_TMPFS}/osm2mapsforge.$(basename $ext .zip).XXXXXXXXXXX)
TMPDIR=$tmpdir; export TMPDIR
OSMOSIS_TMPDIR="-Djava.io.tmpdir=${TMPDIR}"; export OSMOSIS_TMPDIR

# cleanup at exit
trap 'rm -rf $tmpdir' 0

mapsforge=$(basename $file | perl -npe 's/\.(pbf|osm\.pbf|osm|osm\.gz|osm\.bz2)$//')
mapsforge_dir=$tmpdir/$mapsforge-$(basename $ext .zip)
mkdir -p $mapsforge_dir

logfile=$mapsforge_dir/logfile.txt
osmium fileinfo $file > $logfile

# mkgmap bug
if [ ! -s $file ]; then
    : #error "file size is zero, give up!"
fi

date=$(date -u)
coords=$(echo $mapsforge | perl -npe 's,planet_,,; s/_/ /g')
description=$(echo $description | perl -npe '$_=substr($_,0,50)')

cd $mapsforge_dir

BBBIKE_EXTRACT_COORDS=$BBBIKE_EXTRACT_COORDS BBBIKE_EXTRACT_URL=$BBBIKE_EXTRACT_URL \
  date=$date city=$city map_style=$map_style sh $template > README.txt

$text2html < README.txt > README.html

$debug && echo "hd_mode=$hd_mode java_heap=$java_heap BBBIKE_TMPFS=$BBBIKE_TMPFS osm2xxx_max_jobs=$osm2xxx_max_jobs"

echo ">>> Run osmosis, mapsforge writer map style: $map_style" >> $logfile
osmosis --read-pbf-fast $file --mapfile-writer $hd_mode file=$mapsforge.map threads=$osm2xxx_max_jobs >> $logfile  2>&1 || error

if test -n "$(find $logfile -size +$logfile_max_size -print)"; then
    echo "logfile $logfile is to big: $(ls -l $logfile)"
    exit 2
fi

if egrep -ql '^java\.lang\.|OsmosisRuntimeException' $logfile; then
    error
fi

case $BBBIKE_EXTRACT_LANG in
  en ) ext2=$ext ;;
   * ) ext2=$(echo $ext | perl -npe "s/\.zip\$/.${BBBIKE_EXTRACT_LANG}.zip/") ;;
esac

$MD5 *.map > .checksum.txt
mv -f .checksum.txt CHECKSUM.txt

cd ..
mapsforge_zip=$(dirname $file)/$mapsforge.osm.${ext2}
zip -q -r - -- $(basename $mapsforge_dir) | \
  ( cd $pwd;
    cat > $mapsforge_zip.tmp && mv $mapsforge_zip.tmp $mapsforge_zip
    $osm_checksum $mapsforge_zip
  )

rm -rf $tmpdir
#EOF
