#!/usr/local/bin/perl
# Copyright (c) 2009-2013 Wolfram Schneider, https://bbbike.org
#
# extract-streetnames-osm - extract street names from an OpenStreetMap
#	XML dump. The output format is:
#
#		streetname <tab> lon,lat
#
# you can use this script to build an OpenSearch suggestion database
#

use XML::LibXML::Reader;
use IO::File;
use File::Temp;
use Data::Dumper;
use Getopt::Long;

use strict;
use warnings;

use vars qw($VERSION);
$VERSION = 0.1;

# unicode sort(1) mess
$ENV{'LANG'} = 'C';

my $debug = 1;    # 0: quiet, 1: normal, 2: verbose
my $sort  = 1;

my $xmlparser;

sub usage () {
    <<EOF;
usage: $0 [--debug={0..2}] [ --sort=0|1 ] osm_files ....

--debug=0..2	  debug option, default: $debug
--sort=0|1	  sort street names, default: $sort
osmfile ...       Files downloaded by downloadosm,
                  or directory containing .osm files
EOF
}

GetOptions(
    "debug=i" => \$debug,
    "sort=i"  => \$sort,
) or die usage;

my @osm_files = @ARGV;
usage if !@osm_files;

sub extract_nodes {
    my $reader   = shift;
    my $fd_nodes = shift;
    my $country  = shift;

    my $flag = 0;
    while ( $flag || $reader->nextElement == 1 ) {
        $flag = 0;
        last if !$reader->name;

        if ( $reader->name eq 'node' ) {
            my $id  = $reader->getAttribute('id');
            my $lat = $reader->getAttribute('lat');
            my $lon = $reader->getAttribute('lon');

            print $fd_nodes $lon, ",", $lat, "\t$country\n";

        }
    }
}

######################################################################
#
# main
#

die &usage if !@osm_files;

my $reader;
my $fh;
for my $osm_file (@osm_files) {

    if ( $osm_file =~ m{\.osm\.bz2$} ) {
        open $fh, "-|", "osm_bzcat", $osm_file
          or die "Can't run bunzip2 on $osm_file: $!";
    }
    elsif ( $osm_file =~ m{\.osm\.gz$} ) {
        open $fh, "-|", "osm_zcat", $osm_file
          or die "Can't run gzip on $osm_file: $!";
    }
    elsif ( $osm_file =~ m{\.osm$} ) {
        open $fh, $osm_file
          or die "Can't open $osm_file: $!";
    }
    elsif ( $osm_file eq '-' ) {
        $fh = \*STDIN;
    }
    else {
        warn "Unknown file extenstion: $osm_file\n";
        warn "Expect *.osm.gz, *.osm.bz2, *.osm or '-'\n";
        exit(1);
    }

    binmode( $fh, ":utf8" );
    $reader = XML::LibXML::Reader->new( IO => $fh );

    # check if osm file
    $reader->nextElement;
    if ( $reader->name ne 'osm' ) {
        die
"The file '$osm_file' is not starting with a <osm> tag, probably not an osm file?";
    }

    my $fd_nodes;
    my $coords_file = "$osm_file.coords";
    if ($sort) {
        open $fd_nodes, "|-", "sort", "-uf", "-o", $coords_file
          or die "Can't run sort: $!";
    }
    binmode( $fd_nodes, ":utf8" );

    my $country = $osm_file;
    $country =~ s/\.osm\.(gz|bz2|)$//;

    #$country =~ s,.*/,,;

    extract_nodes( $reader, $fd_nodes, $country );
    close $fd_nodes;
    system( 'gzip', '-f', $coords_file );
    if ( $? == -1 ) {
        print "failed to execute: $!\n";
    }
}

#EOF
