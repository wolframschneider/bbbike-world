#!/bin/sh
# Copyright (c) 2009-2013 Wolfram Schneider, https://bbbike.org
#
# ncpu - detect the number of CPUs on a machine
#

PATH=/bin:/usr/bin:/sbin:/usr/sbin; export PATH


minus=0
div=1
vcpu_param=0
rcpu_param=0
hcpu_param=0

case $1 in
	vcpu ) vcpu_param=1; shift ;;
	rcpu ) rcpu_param=1; shift ;;
	hcpu ) hcpu_param=1; shift ;;
	ncpu | cpu ) shift ;;
	"" | -* | +* | / ) ;;
	*    ) echo "usage $0 [ vcpu | rcpu | hcpu ] [ -/+ number ]"; exit 1;;
esac

case $1 in
	-1 | -2 | +1|+2|+3|+4|+6|+8 ) minus=$1 ;;
	/ ) div=$2 ;;
esac

config () {
    if [ -e $HOME/.ncpu.ncpu ]; then
        ncpu=$(cat $HOME/.ncpu.ncpu)
    elif [ -e $HOME/.ncpu ]; then
        ncpu=$(cat $HOME/.ncpu)
    fi
    if [ -e $HOME/.ncpu.rcpu ]; then
        rcpu=$(cat $HOME/.ncpu.rcpu)
    fi
    if [ -e $HOME/.ncpu.vcpu ]; then
        vcpu=$(cat $HOME/.ncpu.vcpu)
    fi
    if [ -e $HOME/.ncpu.hcpu ]; then
        hcpu=$(cat $HOME/.ncpu.hcpu)
    fi
}

# macos
system_macos () {
    ncpu=$(sysctl -n hw.ncpu)
    vcpu=$(sysctl -n hw.physicalcpu > /dev/null 2>&1)
    test -z "$vcpu" && vcpu=$ncpu
}

system_linux () {
  cpuinfo=/proc/cpuinfo

  ncpu=$(egrep -c '^processor' $cpuinfo)
  vcpu=$ncpu
  hcpu=$(($ncpu / 2))
}

case $(uname) in
    Linux ) system_linux ;;
    GNU/kFreeBSD ) system_linux ;;
    Darwin ) system_macos ;;
    * ) echo "ncpu: unsuppored OS $(uname)"; exit 1 ;;
esac

config


if [ "$vcpu_param" = 1 ]; then
    n=$vcpu
elif [ "$rcpu_param" = 1 ]; then
    if test -z "$rcpu"; then
        n=`perl -e 'print int(($ARGV[0] + $ARGV[1])/2)' $ncpu $vcpu`
    else
        n=$rcpu
    fi
elif [ "$hcpu_param" = 1 ]; then
    n=$hcpu
else
    n=$ncpu
fi


# +/-
n=$(perl -e "print int(($n + $minus) / $div + 0.5)")

# print valid output
if [ "$n" -ge 1 -a "$n" -le 128 ]; then
	echo "$n"
else
	echo "1"
fi

#EOF
