#!/bin/sh
# Copyright (c) 2012-2023 Wolfram Schneider, https://bbbike.org
#
# osm2shape  - convert a osm/pbf file to shape
#

PATH=/bin:/usr/bin:/usr/local/bin; export PATH
: ${BBBIKE_EXTRACT_LANG=en}
: ${MD5=`which md5 md5sum false 2>/dev/null | head -1`}
: ${fixpbf=false}
: ${BBBIKE_TMPDIR="/opt/bbbike/tmp"}
: ${BBBIKE_TMPFS="/tmp"}
: ${BBBIKE_LD_LIBRARY_PATH="/var/lib/bbbike/opt/lib"}
: ${logfile_max_size="3000k"}
shape_version="osmium2shape-1.0"

set -e

usage () {
   echo "$@"
   echo "usage file.pbf"
   exit 1
}

file="$1"
city="$2"

test -e "$file" || usage "file $file does not exists"

: ${debug=false}
pwd=$(pwd)


template=$(dirname $0)/../etc/extract/$(basename $0).$BBBIKE_EXTRACT_LANG.sh
case $template in /*) ;; *) template=$(pwd)/$template ;; esac

test -z "$file" && usage
: ${osm_checksum=`dirname $0`/osm-checksum}
osm_fixme=`dirname $0`/pbf2pbf

# use RAM disk
tmpdir=`mktemp -d ${BBBIKE_TMPFS}/osm2shape.XXXXXXXXXXX`
tmpdir_pbf=`mktemp -d ${BBBIKE_TMPFS}/pbf2pbf.XXXXXXXXXXX`
tmpfile=$tmpdir_pbf/$(basename $file)

# keep old name for results
file_orig=$file

# fix broken pbf first
if $fixpbf; then
    cp -f $file $tmpfile
    $(dirname $0)/pbf2pbf $tmpfile
    file=$tmpfile	
fi

# cleanup at exit
trap 'rm -rf $tmpdir $tmpfile $tmpdir_pbf' 0

shape=`basename "$file" | perl -npe 's/\.(pbf|osm\.pbf|osm|osm\.gz|osm\.bz2)$//'`
shape_dir=$tmpdir/${shape}-shp
mkdir -p $shape_dir $shape_dir/shape

text2html=$(dirname $0)/text2html.sh
case $text2html in /*) ;; *) text2html=$(pwd)/$text2html ;; esac

logfile=$shape_dir/logfile.txt
echo "osmium2shape version $shape_version" >> $logfile

if LD_LIBRARY_PATH=$BBBIKE_LD_LIBRARY_PATH osmium2shape -d $shape_dir/shape $file >> $logfile 2>&1; then
   :
else
   exit=$?
   echo "Failed to convert $file"
   tail -c 256K $logfile
   exit $exit
fi
#rm -f $file_fixme

if test -n "$(find $logfile -size +$logfile_max_size -print)"; then
    echo "logfile $logfile is to big: $(ls -l $logfile)"
    exit 2
fi

cd $shape_dir
date=$(date -u)

BBBIKE_EXTRACT_COORDS=$BBBIKE_EXTRACT_COORDS BBBIKE_EXTRACT_URL=$BBBIKE_EXTRACT_URL \
  date=$date city=$city sh $template > README.txt

$text2html < README.txt > README.html

case $BBBIKE_EXTRACT_LANG in
  en ) ext2="" ;;
   * ) ext2=".$BBBIKE_EXTRACT_LANG" ;;
esac

$MD5 shape/* > .checksum.txt
mv -f .checksum.txt CHECKSUM.txt

cd ..
shape_zip=`dirname $file_orig`/$shape.osm.shp${ext2}.zip
zip -q -r - -- `basename $shape_dir` | \
  ( cd $pwd;
    cat > $shape_zip.tmp && mv $shape_zip.tmp $shape_zip
    $osm_checksum $shape_zip
  )

#EOF
