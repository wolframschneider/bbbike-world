#!/bin/sh
# Copyright (c) 2012-2018 Wolfram Schneider, https://bbbike.org
#
# osm2mapsme  - convert a osm/pbf file to maps.me (omim)
#

PATH=/bin:/usr/bin:/usr/local/bin; export PATH
: ${OMIM_PATH=/var/lib/bbbike/opt/omim}
: ${BBBIKE_EXTRACT_LANG=en}
: ${BBBIKE_TMPDIR="/bbbike/tmp"}
: ${BBBIKE_TMPFS="/tmpfs"}
: ${BBBIKE_LD_LIBRARY_PATH="$OMIM_PATH/lib"}
: ${MD5=$(which md5 md5sum false 2>/dev/null | head -1)}
: ${SHA="shasum -a 256"}
: ${logfile_max_size="3000k"}
mapsme_version=$(ls -ld /var/lib/bbbike/opt/omim | awk '{ print $NF }')

set -e

usage () {
   echo "$@"
   echo "usage file [ style ] [ title ]"
   echo ""
   echo "style: osm"
   exit 1
}

file="$1"
city="$3"

test -e "$file" || usage "file $file does not exists"
map_style="osm"

: ${debug=false}
pwd=$(pwd)


template=$(dirname $0)/../etc/extract/$(basename $0).$BBBIKE_EXTRACT_LANG.sh
case $template in /*) ;; *) template=$(pwd)/$template ;; esac

test -z "$file" && usage
: ${osm_checksum=$(dirname $0)/osm-checksum}

# use RAM disk
tmpdir=$(mktemp -d ${BBBIKE_TMPFS}/osm2mapsme.XXXXXXXXXXX)
tmpfile=$tmpdir_pbf/$(basename $file)

# keep old name for results
file_orig=$file

# absolute path
case $file in /*) ;; *) file=$(pwd)/$file ;; esac

# cleanup after signal, but show errors first
trap '( sleep 1; rm -rf $tmpdir $tmpfile) &' 1 2 15

mapsme=$(basename "$file" | perl -npe 's/\.(pbf|osm\.pbf|osm|osm\.gz|osm\.bz2)$//')
mapsme_dir=$tmpdir/${mapsme}-mapsme-${map_style}
mkdir -p $mapsme_dir
( cd $mapsme_dir; ln -s $file . )
file_symlink=$mapsme_dir/$(basename $file)

text2html=$(dirname $0)/text2html.sh
case $text2html in /*) ;; *) text2html=$(pwd)/$text2html ;; esac

logfile=$mapsme_dir/logfile.txt
echo "mapsme version $mapsme_version" > $logfile

LD_LIBRARY_PATH=$BBBIKE_LD_LIBRARY_PATH TMPDIR=$tmpdir \
    GENERATOR_TOOL=$OMIM_PATH/bin/generator_tool OSMCONVERT=$(which osmconvert) \
    OMIM_PATH=$OMIM_PATH \
    time $OMIM_PATH/bin/generate_mwm.sh $file_symlink >> $logfile 2>&1
exit=$?

if test -n "$(find $logfile -size +$logfile_max_size -print)"; then
    echo "logfile $logfile is to big: $(ls -l $logfile)"
    exit 2
fi

# missimg *.mwm file
if ! ls  $mapsme_dir | egrep -q '\.mwm$'; then
   echo "No *.mwm file in $mapsme_dir found for $file_orig"
   exit=99
fi

if [ $exit -ne 0 ]; then
   echo "Failed to convert $file_orig / $file_symlink"
   tail -c 256K $logfile
   exit $exit
fi

cd $mapsme_dir
date=$(date -u)

BBBIKE_EXTRACT_COORDS=$BBBIKE_EXTRACT_COORDS BBBIKE_EXTRACT_URL=$BBBIKE_EXTRACT_URL \
  date=$date city=$city map_style=$map_style sh $template > README.txt

$text2html < README.txt > README.html

case $BBBIKE_EXTRACT_LANG in
  en ) ext2="" ;;
   * ) ext2=".$BBBIKE_EXTRACT_LANG" ;;
esac

( $MD5 *.mwm; $SHA *.mwm ) > .checksum.txt; mv -f .checksum.txt CHECKSUM.txt
rm -f $file_symlink

cd ..
mapsme_zip=$(dirname $file_orig)/$mapsme.osm.mapsme-${map_style}${ext2}.zip
zip -q -r - -- $(basename $mapsme_dir) | \
  ( cd $pwd;
    cat > $mapsme_zip.tmp && mv $mapsme_zip.tmp $mapsme_zip
    $osm_checksum $mapsme_zip
  )

$debug || rm -rf $tmpdir $tmpdir_pbf

