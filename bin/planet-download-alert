#!/bin/bash
# Copyright (c) 2009-2023 Wolfram Schneider, https://bbbike.org
#
# planet-download-alert - alert if new planet.osm.pbf is available
#
# If a new planet.osm is available, start an update

set -e
set -o pipefail

PATH=/usr/local/bin:/bin:/usr/bin; export PATH

file=planet-latest.osm.pbf
planet_osm_server=https://planet.openstreetmap.org/planet

automatic_update="yes"
bbbikerc=$HOME/.bbbikerc
planet_osm_min_size=73000600300

if [ -e "$bbbikerc" ]; then
    . "$bbbikerc"
fi

dir=../osm/download

update=$dir/.update
update_new=$dir/.update.new
update_lock=$dir/.update.lock

#
# don't run again if there was a run in the last 48 hours
# This should avoid DoS and too many updates
#
if [ -e $update ]; then
   if [ `find $update -mmin -2900 | wc -l` -gt 0 ]; then
	exit 0
   fi
fi

if [ -e $update_lock ]; then
  if [ `find $update_lock -mmin -2400 | wc -l` -gt 0 ]; then
    # still running, for less than 36 hours
    exit 0
  fi
fi

curl --connect-timeout 5 -m 36 -L -sSf -v $planet_osm_server/$file.md5 > $update_new 2> $update_new.head

# we compare the MD5 checksum of the original planet.osm file
if test -e $update && cmp $update $update_new 2>/dev/null ; then
   # no updates....
   exit 0

else
   logfile=tmp/log.planet-download-pbf
   new=$(curl --connect-timeout 5 -L -sSf --head --location $planet_osm_server/$file | perl -ne 'print "$1\n" if /^Content-Length:\s+(\d+)/i')
   curl --connect-timeout 5 -L -sSf --head --location $planet_osm_server/$file | egrep -i "^(Content-Length:|Last-|Location:)" >> $logfile

   if [ -n "$automatic_update" ]; then
     if [ $new -gt $planet_osm_min_size ]; then
       touch $update_lock

       (
       echo "please update me: $planet_osm_server/$file"
       echo "start updated: $(date), may run 10-20 minutes"
       echo "hostname: $(hostname), IP: $(egrep $(hostname) /etc/hosts)"
       ) >> $logfile
      

       if \time make planet-download-pbf >> $logfile 2>&1; then
         echo "done updated: $(date)" >> $logfile
         cp -f $update_new $update

	 # cleanup lock file on success
	 rm -f $update_lock
       else
	 tail -n 200 $logfile
         echo "failed: $(date)"
         exit 1
       fi

     else
       echo "planet.osm size to small: $new < $planet_osm_min_size"
       exit 1
     fi
   fi
fi

#EOF

