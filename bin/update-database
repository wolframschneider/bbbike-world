#!/bin/sh
# Copyright (c) 2009-2023 Wolfram Schneider, https://bbbike.org
#
# wrapper for Makefile
#
# e.g. run after convert-wgs8 failure:
#
#   env bbbike_extract="" /path/to/this/file

set -e
PATH="/usr/local/bin:/bin:/bin:/usr/bin"; export PATH

if [ -e $HOME/.bbbikerc ]; then
    . $HOME/.bbbikerc
fi

available_disk_size ()
{
    disk=$1
    min_disk_size=$2
    available_disk_size=$(df -k $disk | tail -1 | awk '{ print int($4/1024/1024) }')
    if [ $available_disk_size -le $min_disk_size ]; then
        echo "Required disk space in $disk: $available_disk_size < $min_disk_size GB"
        echo "Sorry, give up. Please cleanup the disk, and start it again."
        echo ""
        df -h .
        echo ""
        exit 1
    fi
}
#########################################################################
# we need ca. 300GB free disk space for a fresh installation
#
# du -hs bbbike osm/download/planet-latest*pbf osm/download/sub-planet
# 100G     bbbike
# 73G     osm/download/planet-daily.osm.pbf
# 127G     osm/download/sub-planet-daily
#

available_disk_size . 100
available_disk_size /usr/local/www/bbbike.org/ 50

tmp=tmp
mkdir -p $tmp

: ${bbbike_build="build-runtime"}
: ${bbbike_extract="distclean-osm distclean update-files cities-parallel"}
: ${bbbike_convert="convert-wgs84 convert-post check-data-osm convert-bbbike update-files"}
: ${bbbike_install="rsync-tgz _rsync cache-heater-k"}
: ${bbbike_format="pbf2osm pbf2csv pbf2geojson osm2shape osm2organicmaps osm2garmin osm2mbtiles osm2mapsforge osm2svg"}
: ${bbbike_post="osm-html rsync rsync-osm-full"}

commands="$bbbike_build $bbbike_extract $bbbike_convert $bbbike_install $bbbike_format $bbbike_post"

begin="$(date '+%F %T %Z')"

for i in $commands
do
    # compress old log files
    if [ -e tmp/log.$i ]; then
         gzip -f tmp/log.$i
    fi

    ( date; time make -s $i; date ) > tmp/log.$i 2>&1
done

# set an notice
(
   echo "hostname: $(hostname), IP: $(egrep $(hostname) /etc/hosts)"
   echo "begin: $begin"
   echo "end:   $(date '+%F %T %Z')"
) | mail -s "$0/done" $(whoami)

#EOF
