#!/usr/local/bin/perl
# Copyright (c) May 2018-2022 Wolfram Schneider, https://bbbike.org
#
# usage: /etc/munin/plugins/bbbike-data-status [ config ]
#
# get documentation with: perldoc /path/to/script

use Getopt::Long;
use File::stat;
use IO::File;

use strict;
use warnings;

=head1 NAME

bbbike-data-status - monitor time ./data-osm was last updated

=head1 CONFIGURATION

Configuration parameters for /etc/munin/plugin-conf.d/bbbike-local
if you need to override the defaults below:

 [bbbike-data-status]
   env.wait_warnings NN - Generate a warning if ./data-osm is out of date
   env.wait_critical NN - Generate a critical if ./data-osm is really out of date

=cut

########################################################################
# init
#
my $debug = 0;
my $help  = 0;

my $bbbike_dir    = "/usr/local/www/bbbike.org";
my $wait_warning  = $ENV{"warning"} // 8;          # in days
my $wait_critical = $ENV{"critical"} // 16;        # in days
$ENV{PATH} = '/bin:/usr/bin';
$ENV{LANG} = 'C';

sub usage {
    <<EOF;
usage: $0 [ options ] config

--debug=0..2               default: $debug
--bbbike-dir=/path/to/dir  default: $bbbike_dir
EOF
}

sub config_wait {

    <<EOF;
graph_title BBBike data status time
graph_vlabel BBBike data status time
graph_category bbbikesystem
graph_info BBBike data status time
graph_period hour
bbbike_data_status_time.label BBBike data status time
bbbike_data_status_time.min 0
bbbike_data_status_time.warning $wait_warning
bbbike_data_status_time.critical $wait_critical
EOF
}

sub status {
    my $mtime = shift;
    my $time  = time;

    return ( $time - $mtime ) / ( 24 * 60 * 60 );
}

sub data_status_time {
    my %args = @_;

    my $bbbike_dir = $args{'bbbike_dir'};
    my $city       = $args{'city'} // "Hamburg";

    my $time = time();
    my $file = "$bbbike_dir/data-osm/$city/strassen";

    my $st    = stat($file);
    my $mtime = 0;

    if ( defined $st ) {
        $mtime = $st->mtime;
    }
    else {
        warn "stat $file: $!\n";
    }

    print "bbbike_data_status_time.value @{[ status($mtime) ]}\n";
}

#############################################
# main
#

GetOptions(
    "debug=i"      => \$debug,
    "bbbike-dir=s" => \$bbbike_dir,
    "help"         => \$help,
) or die usage;

die usage if $help;

if ( defined $ARGV[0] && $ARGV[0] eq 'config' ) {
    print &config_wait;
}
else {
    &data_status_time( 'bbbike_dir' => $bbbike_dir, 'city' => 'Hamburg' );
}

# EOF
