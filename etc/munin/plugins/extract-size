#!/bin/sh
# Copyright (c) Sep 2011-2022 Wolfram Schneider, https://bbbike.org
#
# usage: /path/to/script [ config ]
#
# get documentation with: perldoc /path/to/script

: << =cut

=head1 NAME

extract-size  - Plugin to monitor average file size

=head1 CONFIGURATION

Configuration parameters for /etc/munin/plugin-conf.d/munin-node
if you need to override the defaults below:

 [extract-size]
   env.warning   - Generate a warning if file size goes above this level
   env.critical  - Generate a critical if files size goes above this level

=cut


PATH="/bin:/usr/bin"; export PATH
extract_dir="/var/cache/extract"
formats="csv.gz csv.xz garmin-bbbike.zip garmin-cycle.zip garmin-leisure.zip garmin-onroad.zip garmin-opentopo.zip garmin-openfietslite.zip garmin-openfietsfull.zip garmin-oseam.zip garmin-osm.zip mapsforge-osm.zip organicmaps-osm.zip o5m.gz o5m.xz obf.zip opl.xz osm.bz2 osm.gz osm.pbf osm.xz png-cadastre.zip png-google.zip png-hiking.zip png-osm.zip png-urbanight.zip png-wireframe.zip shp.zip srtm-europe.garmin-srtm.zip srtm-europe.obf.zip srtm-europe.osm.pbf srtm-europe.osm.xz srtm.garmin-srtm.zip srtm.obf.zip srtm.osm.pbf srtm.osm.xz svg-cadastre.zip svg-google.zip svg-hiking.zip svg-osm.zip svg-urbanight.zip svg-wireframe.zip mbtiles-openmaptiles.zip"

config=$1

if [ "$1" = "config" ]; then
    : ${warning=800000000}
    : ${critical=1200000000}
     
    cat <<EOF
multigraph pbf_size_average
graph_args --base 1024 --lower-limit 0
graph_title Extracts size - average
graph_vlabel Extracts size - average
graph_category extractadmin
graph_info File size
graph_period minute
EOF
    for f in $formats
    do
        ff=$(echo $f | sed -e 's/[\.\-]/_/g')
        echo "$ff.label $f"
        echo "$ff.min 0"
        echo "$ff.warning $warning"
        echo "$ff.critical $critical"
    done
    
    cat <<EOF
multigraph pbf_size_median
graph_args --base 1024 --lower-limit 0
graph_title Extracts size - median
graph_vlabel Extracts size - median
graph_category extractadmin
graph_info File size
graph_period minute
EOF
    for f in $formats
    do
        ff=$(echo $f | sed -e 's/[\.\-]/_/g')
        echo "$ff.label $f"
        echo "$ff.min 0"
        echo "$ff.warning $warning"
        echo "$ff.critical $critical"
    done

    exit 0
fi

###########################################################
du_k=$(mktemp /tmp/munin-bbbike.XXXXXXXXX)
( cd $extract_dir/download && du -k * ) > $du_k

echo "multigraph pbf_size_average"
for f in $formats
do
    ff=$(echo $f | sed -e 's/[\.\-]/_/g')
    echo "$ff.value"     $( egrep "${f}$" < $du_k | awk '{ s += $1 } END { printf("%d", NR ? s * 1024 / NR : 0)  }' )
done

echo ""
echo "multigraph pbf_size_median"
for f in $formats
do
    ff=$(echo $f | sed -e 's/[\.\-]/_/g')
    echo "$ff.value"     $( egrep "${f}$" < $du_k | sort -n |
        awk '{
            count[NR] = $1;
        } END {
            if (NR % 2) {
                print 1024 * count[(NR + 1) / 2];
            } else {
                print 1024 * (count[(NR / 2)] + count[(NR / 2) + 1]) / 2.0;
            }
        }'
    )
done

rm -f $du_k

exit 0
#EOF
