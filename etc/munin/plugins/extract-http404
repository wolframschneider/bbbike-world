#!/bin/sh
# Copyright (c) Sep 2011-2023 Wolfram Schneider, https://bbbike.org
#
# usage: /path/to/script [ config ]
#
# get documentation with: perldoc /path/to/script

: << =cut

=head1 NAME

extract-http404  - Plugin to monitor number of HTTP 404 errors in access log

=head1 CONFIGURATION

Configuration parameters for /etc/munin/plugin-conf.d/bbbike-local
if you need to override the defaults below:

 [bbbike-extract-files]
   env.warning   - Generate a warning if number goes above this level
   env.critical  - Generate a critical if number goes above this level

=cut


PATH="/bin:/usr/bin"; export PATH
LANG="C"; export LANG
grep='grep -E -a'

log_dir="/var/log/lighttpd"
log_files="api.bbbike.log bbbike.log dev.bbbike.log download.bbbike.log extract.bbbike.log m.bbbike.log search.bbbike.log"
log_files_extract="dev.bbbike.log extract.bbbike.log"

config=$1

if [ "$1" = "config" ]; then
  : ${warning="30"}
  : ${critical="100"}
     
  cat <<EOF
multigraph HTTP_404
graph_title HTTP 404
graph_vlabel HTTP 404
graph_category extractadmin
graph_period minute
EOF

  for file in $log_files
  do
    item=$(basename $file .log | sed 's/\./_/g')
    echo "$item.label $item"
    echo "$item.min 0"
  done

  cat <<EOF
multigraph HTTP_520
graph_title HTTP 520
graph_vlabel HTTP 520
graph_category extractadmin
graph_period minute
EOF

  for file in $log_files_extract
  do
    item=$(basename $file .log | sed 's/\./_/g')
    echo "$item.label $item"
    echo "$item.min 0"
  done

  exit 0
fi

cd $log_dir

echo "multigraph HTTP_404"
for file in $log_files
do
  item=$(basename $file .log | sed 's/\./_/g')
  echo -n "$item.value "
  if [ -e $file ]; then
    $grep '" 404 ' $file | $grep -v 'bot|/apple|cyberscan|BBBike.org-Test|curl/| //|\.php |/wp-[a-z]|GET /(apple-|ads.txt |app-ads.txt |.well-known/)|"HEAD /|/ARRAY\(' | awk '{ print $1 }' | sort -u | wc -l
  else 
    echo "0"
  fi
done

echo ""
echo "multigraph HTTP_520"
for file in $log_files_extract
do
  item=$(basename $file .log | sed 's/\./_/g')
  echo -n "$item.value "
  $grep '" 520 ' $file | awk '{ print $1 }' | sort -u | wc -l
done

exit 0

#EOF
